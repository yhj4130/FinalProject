package com.together.web.category;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.together.web.Pagination;

@Controller
public class CategoryMainController {

	@Autowired
	private SqlSession sqlSession;

	// Best
	@RequestMapping(value = "/bestlist.do")
	public String bestList(ModelMap model, HttpServletRequest request,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {

		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);

		int totalNum = 0;
		totalNum = dao.nowRecruitTravelNum();
		model.addAttribute("totalNum", totalNum);

		Pagination paging = new Pagination();

		String pageNum = request.getParameter("pageNum");
		int current_page = 1;

		if (pageNum != null)
			current_page = Integer.parseInt(pageNum);

		int numPerPage = 16;
		int total_page = paging.getPageCount(numPerPage, totalNum);

		if (current_page > total_page)
			current_page = total_page;

		int start = (current_page - 1) * numPerPage + 1;
		int end = current_page * numPerPage;

		TravelDTO dto = new TravelDTO();
		dto.setStart(start);
		dto.setEnd(end);

		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END");
		else if (selectValue.equals("2"))
			dto.setOrderBy("VIEWNUM");
		else if (selectValue.equals("3"))
			dto.setOrderBy("T_JJIM");
		else if (selectValue.equals("4"))
			dto.setOrderBy("W_JJIM");

		ArrayList<TravelDTO> list = dao.travelInfoBasic(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO startDTO = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(startDTO.getRegion_Start());
			travel.setCity_Start(startDTO.getCity_Start());

			TravelDTO endDTO = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(endDTO.getRegion_End());
			travel.setCity_End(endDTO.getCity_End());
		}

		model.addAttribute("travelList", list);
		model.addAttribute("selectValue", selectValue);

		String url = "/web/bestlist.do";
		String pageIndexList = paging.pageIndexList(current_page, total_page, url);

		model.addAttribute("pageIndexList", pageIndexList);

		return "category/BestList";
	}

	// 테마 전체
	@RequestMapping(value = "/themalistall.do")
	public String themaListAll(ModelMap model, HttpServletRequest request,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);

		int totalNum = 0;
		totalNum = dao.nowRecruitTravelNum();
		model.addAttribute("totalNum", totalNum);
		
		Pagination paging = new Pagination();

		String pageNum = request.getParameter("pageNum");
		int current_page = 1;

		if (pageNum != null)
			current_page = Integer.parseInt(pageNum);

		int numPerPage = 16;
		int total_page = paging.getPageCount(numPerPage, totalNum);

		if (current_page > total_page)
			current_page = total_page;

		int start = (current_page - 1) * numPerPage + 1;
		int end = current_page * numPerPage;

		TravelDTO dto = new TravelDTO();
		dto.setStart(start);
		dto.setEnd(end);

		// 최신 인기 조회 찜 인기작가 여행시작
		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themaAll(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO startDTO = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(startDTO.getRegion_Start());
			travel.setCity_Start(startDTO.getCity_Start());

			TravelDTO endDTO = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(endDTO.getRegion_End());
			travel.setCity_End(endDTO.getCity_End());
		}

		model.addAttribute("travelList", list);
		model.addAttribute("selectValue", selectValue);
		
		String url = "/web/bestlist.do";
		String pageIndexList = paging.pageIndexList(current_page, total_page, url);

		model.addAttribute("pageIndexList", pageIndexList);

		return "category/ThemeListAll";
	}

	@RequestMapping(value = "/themalistnature.do")
	public String themaListNature(ModelMap model, HttpServletRequest request,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);
		TravelDTO dto = new TravelDTO();

		int totalNum = 0;
		dto.setOrderNum("1");
		totalNum = dao.themaNum(dto);
		model.addAttribute("totalNum", totalNum);
		
		Pagination paging = new Pagination();

		String pageNum = request.getParameter("pageNum");
		int current_page = 1;

		if (pageNum != null)
			current_page = Integer.parseInt(pageNum);

		int numPerPage = 16;
		int total_page = paging.getPageCount(numPerPage, totalNum);

		if (current_page > total_page)
			current_page = total_page;

		int start = (current_page - 1) * numPerPage + 1;
		int end = current_page * numPerPage;

		dto.setStart(start);
		dto.setEnd(end);

		// 최신 인기 조회 찜 인기작가 여행시작
		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themalist(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO startDTO = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(startDTO.getRegion_Start());
			travel.setCity_Start(startDTO.getCity_Start());

			TravelDTO endDTO = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(endDTO.getRegion_End());
			travel.setCity_End(endDTO.getCity_End());

		}

		model.addAttribute("travelList", list);

		model.addAttribute("selectValue", selectValue);

		return "category/ThemeListNature";
	}

	@RequestMapping(value = "/themalistct.do")
	public String themaListCT(ModelMap model,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);
		TravelDTO dto = new TravelDTO();

		int totalNum = 0;
		dto.setOrderNum("2");
		totalNum = dao.themaNum(dto);
		model.addAttribute("totalNum", totalNum);

		// 최신 인기 조회 찜 인기작가 여행시작

		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themalist(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO start = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(start.getRegion_Start());
			travel.setCity_Start(start.getCity_Start());

			TravelDTO end = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(end.getRegion_End());
			travel.setCity_End(end.getCity_End());

		}

		model.addAttribute("travelList", list);

		model.addAttribute("selectValue", selectValue);

		return "category/ThemeListCT";
	}

	@RequestMapping(value = "/themalistls.do")
	public String themaListLS(ModelMap model,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);
		TravelDTO dto = new TravelDTO();

		int totalNum = 0;
		dto.setOrderNum("3");
		totalNum = dao.themaNum(dto);
		model.addAttribute("totalNum", totalNum);

		// 최신 인기 조회 찜 인기작가 여행시작

		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themalist(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO start = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(start.getRegion_Start());
			travel.setCity_Start(start.getCity_Start());

			TravelDTO end = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(end.getRegion_End());
			travel.setCity_End(end.getCity_End());

		}

		model.addAttribute("travelList", list);

		model.addAttribute("selectValue", selectValue);

		return "category/ThemeListLS";
	}

	@RequestMapping(value = "/themalistsf.do")
	public String themaListSF(ModelMap model,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);
		TravelDTO dto = new TravelDTO();

		int totalNum = 0;
		dto.setOrderNum("4,5");
		totalNum = dao.themaNum(dto);
		model.addAttribute("totalNum", totalNum);

		// 최신 인기 조회 찜 인기작가 여행시작

		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themalist(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO start = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(start.getRegion_Start());
			travel.setCity_Start(start.getCity_Start());

			TravelDTO end = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(end.getRegion_End());
			travel.setCity_End(end.getCity_End());

		}

		model.addAttribute("travelList", list);

		model.addAttribute("selectValue", selectValue);

		return "category/ThemeListSF";
	}

	@RequestMapping(value = "/themalistother.do")
	public String themaListOther(ModelMap model,
			@RequestParam(name = "selectValue", defaultValue = "1") String selectValue) throws IOException {
		ITravelDAO dao = sqlSession.getMapper(ITravelDAO.class);
		TravelDTO dto = new TravelDTO();

		int totalNum = 0;
		dto.setOrderNum("6");
		totalNum = dao.themaNum(dto);
		model.addAttribute("totalNum", totalNum);

		// 최신 인기 조회 찜 인기작가 여행시작

		if (selectValue.equals("1"))
			dto.setOrderBy("RECRUIT_END DESC");
		else if (selectValue.equals("2"))
			dto.setOrderBy("RATIO DESC");
		else if (selectValue.equals("3"))
			dto.setOrderBy("VIEWNUM DESC");
		else if (selectValue.equals("4"))
			dto.setOrderBy("T_JJIM DESC");
		else if (selectValue.equals("5"))
			dto.setOrderBy("W_JJIM DESC");
		else if (selectValue.equals("6"))
			dto.setOrderBy("T_START");

		ArrayList<TravelDTO> list = dao.themalist(dto);

		for (TravelDTO travel : list) {
			ArrayList<String> themaType = dao.tThemaType(travel.getTravelCode());
			travel.setThemaType(themaType);

			TravelDTO start = dao.tCityStart(travel.getTravelCode());
			travel.setRegion_Start(start.getRegion_Start());
			travel.setCity_Start(start.getCity_Start());

			TravelDTO end = dao.tCityEnd(travel.getTravelCode());
			travel.setRegion_End(end.getRegion_End());
			travel.setCity_End(end.getCity_End());

		}

		model.addAttribute("travelList", list);

		model.addAttribute("selectValue", selectValue);

		return "category/ThemeListOther";
	}
}
