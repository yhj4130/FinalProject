/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2019-07-11 07:21:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class Exit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/gram/Desktop/FinalProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TogatherProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1561878082826L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write('\r');
      out.write('\n');

 Date now = new Date();
 SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
 
 String today = sf.format(now);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>To_gather</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t.container\r\n");
      out.write("\t{\r\n");
      out.write("\t\twidth: 500px;\r\n");
      out.write("    \tmargin: 100px auto;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\" style=\"width: 1500px;\">\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("<div class=\"col-sm-12 text-center\" >\r\n");
      out.write("<div class=\"col-sm-3\"></div>\r\n");
      out.write(" \r\n");
      out.write("<div class=\"col-sm-6\">\r\n");
      out.write("<a href=\"\"><img src=\"");
      out.print(cp );
      out.write("/resources/images/To_gather.png\" style=\"width: 500px;\" height=\"150px;\"></a>\r\n");
      out.write("<h3><span style=\"font-family: 맑은 고딕; font-size: 20pt;\">회원탈퇴</span></h3>\r\n");
      out.write("<h5><span style=\"font-family: 맑은 고딕; font-size: 12pt; color: red;\">* 필수 입력 사항</span></h5>\r\n");
      out.write("<br>\r\n");
      out.write("    <form action=\"exit.do\" method=\"post\">\r\n");
      out.write("        <table class=\"table table-boardered\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th><span style=\"font-family: 맑은 고딕; font-size: 20pt; font-weight: bold;\">탈퇴사유</span></th>\r\n");
      out.write("            \t<td>\r\n");
      out.write("            \t\t<textarea rows=\"5\" cols=\"60\" id=\"exitReason\" required=\"required\" placeholder=\"100자 이내로 작성해주세요.\" id=\"exitReason\" name=\"exitReason\"></textarea>\r\n");
      out.write("            \t</td>    \t\r\n");
      out.write("            </tr>\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t<tr>\r\n");
      out.write("                <th><span style=\"font-family: 맑은 고딕; font-size: 20pt; font-weight: bold;\">탈퇴일자</span></th>\r\n");
      out.write("            \t<td>\r\n");
      out.write("            \t\t<span style=\"font-family: 맑은 고딕; font-size: 18pt;\" id=\"exitDate\">");
      out.print( today );
      out.write("</span>\r\n");
      out.write("            \t</td>    \t\r\n");
      out.write("            </tr>\r\n");
      out.write("                       \r\n");
      out.write("        </table>\r\n");
      out.write("        <div style=\"margin-bottom: 50px;\">\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn\" style=\"width: 240px; margin: 5px;\">탈퇴하기</button>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn\" style=\"width: 240px; margin: 5px;\" onclick=\"history.back(-1); return false;\">취소</button>\t\t\t\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write(" \r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#exitReason\").on('keyup', function() {\r\n");
      out.write("\r\n");
      out.write("\t\tif($(this).val().length > 50) \r\n");
      out.write("\t\t{\r\n");
      out.write("\r\n");
      out.write("\t\t\talert(\"글자수는 100자로 이내로 제한됩니다.\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(this).val($(this).val().substring(0, 100));\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
